name: CI and Deploy

on: [push]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: appdb
        healthcheck: 
          test: ["CMD-SHELL", "pg_isready -U postgres -d appdb"]
          interval: 5s
          timeout: 5s
          retries: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run typecheck
      - run: npm run lint
      - run: npm test -- --ci
      - run: npm run build
      - run: npm run migration:run

  deploy:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run migration:run
      - name: Trigger Render Deploy
        run: curl "$DEPLOY_HOOK_URL"
        env:
          DEPRLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK }}
      - name: Wait and verify API after deploy
        run: npm run postdeploy:check
        env:
          API_URL: "https://twowa-aplikacja.onrender.com/api/users"
